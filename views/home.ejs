<%- include('partials/header') %>
    <section class="min-vh-100 bg-light" id="upcoming-meetings">
      <div class="container py-5">
        <div class="row g-3 align-items-center mb-3">
          <div class="col">
            <h1 class="h4 m-0">Dashboard</h1>
            <div class="text-secondary small">View and manage your upcoming meetings and rooms</div>
          </div>
          <div class="col-auto d-flex gap-2">
            <% if (["admin", "manager"].includes(role)) { %>
            <a href="/meeting" class="btn btn-primary"><i class="bi bi-calendar-plus me-1"></i>Schedule Meeting</a>
            <% } %>
            <% if (role === "admin") { %>
              <a href="/room" class="btn btn-outline-primary"><i class="bi bi-door-open me-1"></i>Create Room</a>
            <% } %>
          </div>
        </div>

        <div class="card shadow-sm mb-5 border-0">
          <div class="card-header bg-white">
            <h2 class="h5 m-0">Upcoming Meetings</h2>
          </div>
          <div class="card-body p-0">
            <% if (typeof meetings !== 'undefined' && meetings && meetings.length) { %>
                <div class="table-responsive">
                  <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                      <tr>
                        <th scope="col">Title</th>
                        <th scope="col">Time</th>
                        <th scope="col">Room</th>
                        <th scope="col">Host</th>
                        <th scope="col">Participants</th>
                        <% if (["admin", "manager"].includes(role)) { %>
                        <th scope="col">Action</th>
                        <% } %>
                      </tr>
                    </thead>
                    <tbody>
                      <% meetings.forEach(meeting => { %>
                        <tr data-row>
                          <td><%= meeting.reason %></td>
                          <td>
                            <span class="text-body" data-start="<%= meeting.startDate %>" data-end="<%= meeting.endDate %>" data-dt></span>
                            <div class="text-secondary small" data-duration></div>
                          </td>
                          <td><span class="badge text-bg-primary"><i class="bi bi-geo-alt me-1"></i><%= meeting.room.name %></span></td>
                          <td><%= meeting.user.email %></td>
                          <td>
                            <% (meeting.candidates || []).forEach((p, idx) => { %>
                              <p class="badge text-bg-secondary me-1 mb-1"><i class="bi bi-person me-1"></i><%= p.email %></span>
                            <% }) %>
                          </td>
                          <% if (["admin", "manager"].includes(role)) { %>
                          <td class="d-flex gap-2">
                            <a href="/meeting/<%= meeting._id %>" class="btn btn-primary btn-sm"><i class="bi bi-pencil-square me-1"></i>Edit</a>
                            <button class="btn btn-danger btn-sm" onclick="deleteMeeting('<%= meeting._id %>')"><i class="bi bi-trash me-1"></i>Delete</button>
                          </td>
                          <% } %>
                        </tr>
                      <% }) %>
                    </tbody>
                  </table>
                </div>
              <% } else { %>
                <div class="p-5 text-center">
                  <div class="h5 mb-1">No meetings scheduled</div>
                  <% if (["admin", "manager"].includes(role)) { %>
                  <p class="text-secondary mb-3">Get started by scheduling your first meeting.</p>
                  <a href="/meeting" class="btn btn-primary"><i class="bi bi-calendar-plus me-1"></i>Schedule Meeting</a>
                  <% } %>
                </div>
              <% } %>
            </div>
        </div>
        <% if (role === "admin") { %>
        <div class="card shadow-sm mb-5 border-0">
          <div class="card-header bg-white">
            <h2 class="h5 m-0">Rooms</h2>      
          </div>
          <div class="card-body p-0">
            <% if (typeof rooms !== 'undefined' && rooms && rooms.length) { %>
              <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                  <thead class="table-light">
                    <tr>
                      <th scope="col">Sr No.</th>
                      <th scope="col">Name</th>
                      <th scope="col">Capacity</th>
                      <th scope="col">Action</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% rooms.forEach(room => { %>
                      <tr>
                          <td><%= rooms.indexOf(room) + 1 %></td>
                          <td><i class="bi bi-door-closed-fill me-1 text-secondary"></i><%= room.name %></td>
                          <td><span class="badge text-bg-primary"><i class="bi bi-people-fill me-1"></i><%= room.capacity %></span></td>
                          <td>
                            <a href="/room/<%= room._id %>" class="btn btn-primary btn-sm" ><i class="bi bi-pencil-square me-1"></i>Edit</a>
                            <button class="btn btn-danger btn-sm" onclick="deleteRoom('<%= room._id %>')"><i class="bi bi-trash me-1"></i>Delete</button>
                          </td>
                      </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
            <% } else { %>
              <div class="p-5 text-center">
                <div class="h6 mb-1">No rooms available</div>
                <p class="text-secondary mb-3">Create a room to start hosting meetings.</p>
                <a href="/room" class="btn btn-outline-primary">Create Room</a>
              </div>
            <% } %>
          </div>
        </div>

        <div class="card shadow-sm mb-5 border-0">
          <div class="card-header bg-white">
            <h2 class="h5 m-0">Users</h2>      
          </div>
          <div class="card-body p-0">
            <% if (typeof users !== 'undefined' && users && users.length) { %>
              <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                  <thead class="table-light">
                    <tr>
                      <th scope="col">Sr No.</th>
                      <th scope="col">Full Name</th>
                      <th scope="col">Email</th>
                      <th scope="col">Role</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% users.forEach(user => { %>
                      <tr>
                          <td><%= users.indexOf(user) + 1 %></td>
                          <td><i class="bi bi-door-closed-fill me-1 text-secondary"></i><%= user.fullname %></td>
                          <td><span class="badge text-bg-primary"><i class="bi bi-people-fill me-1"></i><%= user.email %></span></td>
                          <td>
                            <select class="form-select" onchange="updateUserRole('<%= user.email %>', this.value)">
                              <option value="user" <%= user.role === 'user' ? 'selected' : '' %>>User</option>
                              <option value="manager" <%= user.role === 'manager' ? 'selected' : '' %>>Manager</option>
                              <option value="admin" <%= user.role === 'admin' ? 'selected' : '' %>>Admin</option>
                            </select>
                          </td>
                      </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
            <% } else { %>
              <div class="p-5 text-center">
                <div class="h6 mb-1">No rooms available</div>
                <p class="text-secondary mb-3">Create a room to start hosting meetings.</p>
                <a href="/room" class="btn btn-outline-primary">Create Room</a>
              </div>
            <% } %>
          </div>
        </div>
        <% } %>
      </div>
    </section>
    <script>
      // Pretty time formatting for meeting rows
      (function formatTimes() {
        const fmtDate = new Intl.DateTimeFormat(undefined, { weekday: 'short', month: 'short', day: 'numeric' });
        const fmtTime = new Intl.DateTimeFormat(undefined, { hour: 'numeric', minute: '2-digit' });
        document.querySelectorAll('[data-dt]').forEach(span => {
          const s = new Date(span.getAttribute('data-start'));
          const e = new Date(span.getAttribute('data-end'));
          if (isNaN(s) || isNaN(e)) { span.textContent = span.getAttribute('data-start') + ' - ' + span.getAttribute('data-end'); return; }
          const sameDay = s.toDateString() === e.toDateString();
          span.textContent = sameDay
            ? `${fmtDate.format(s)}, ${fmtTime.format(s)} – ${fmtTime.format(e)}`
            : `${fmtDate.format(s)} ${fmtTime.format(s)} → ${fmtDate.format(e)} ${fmtTime.format(e)}`;
          const durEl = span.parentElement?.querySelector('[data-duration]');
          if (durEl) {
            const mins = Math.max(0, Math.round((e - s) / 60000));
            const h = Math.floor(mins / 60), m = mins % 60;
            durEl.textContent = h ? `${h}h ${m}m` : `${m}m`;
          }
        });
      })();

      function deleteMeeting(meetingId) {
        if (confirm("Are you sure you want to delete this meeting?")) {
          fetch(`/api/meeting/${meetingId}`, {
            method: "DELETE"
          })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            }
          })
          .catch(error => {
            console.error("Error deleting meeting:", error);
          });
        }
      };

      function deleteRoom(roomId) {
        if (confirm("Are you sure you want to delete this room?")) {
          fetch(`/api/room/${roomId}`, {
            method: "DELETE"
          })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            }
          })
          .catch(error => {
            console.error("Error deleting room:", error);
          });
        }
      };

      function updateUserRole(email, role) {
        if (confirm("Are you sure you want to update this user's role?")) {
          fetch(`/api/auth/update-role`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({ email, role })
          })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            }
          })
          .catch(error => {
            console.error("Error updating user role:", error);
          });
        }
      }
    </script>
<%- include('partials/footer') %>